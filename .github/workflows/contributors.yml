name: Monthly contributor report
on:
  workflow_dispatch:
  schedule:
    - cron: "5 9 1 * *" # At 09:05 UTC on 1st of the month (https://crontab.guru/#5_9_1_*_*)

permissions:
  discussions: write

jobs:
  contributor_report:
    name: Contributor report
    runs-on: ubuntu-latest

    steps:
      - name: Get dates for last month
        id: dates
        shell: bash
        run: |
          # Calculate the first day of the previous month
          start_date=$(date -d "last month" +%Y-%m-01)

          # Calculate the last day of the previous month
          end_date=$(date -d "$start_date +1 month -1 day" +%Y-%m-%d)

          # Set an output parameter with the date range
          echo "START_DATE=$start_date" >> "$GITHUB_OUTPUT"
          echo "END_DATE=$end_date" >> "$GITHUB_OUTPUT"

          # Last month in abbreviated month format and 2-digit year
          # For example: "Aug 25"
          title_date=$(date -d "last month" +'%b %y')

          # Use it in the discussion title
          echo "TITLE_DATE=$title_date" >> "$GITHUB_OUTPUT"

      - name: Run contributor action
        uses: github/contributors@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          START_DATE: ${{ steps.dates.outputs.START_DATE }}
          END_DATE: ${{ steps.dates.outputs.END_DATE }}
          REPOSITORY: "mdn/content,mdn/yari,mdn/rari,mdn/translated-content,mdn/browser-compat-data,mdn/fred"
          SPONSOR_INFO: "true"
          LINK_TO_PROFILE: "true"

      - name: Filter users
        id: result
        run: |
          grep -v "author=mdn-bot" ./contributors.md > ./temp && mv ./temp ./contributors.md
          echo "BODY=$(cat ./contributors.md)" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Discussion
        env:
          BODY: ${{ steps.result.outputs.BODY }}
          CATEGORY_ID: "DIC_kwDOGsEH7M4COuo8"
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_ID: "R_kgDOGsEH7A"
          TITLE: "Thank you contributors! (${{ steps.dates.outputs.TITLE_DATE }})"
        run: |
          gh api graphql -f query='
            mutation($repositoryId: ID!, $categoryId: ID!, $title: String!, $body: String!) {
              createDiscussion(input: {
                repositoryId: $repositoryId
                categoryId: $categoryId
                title: $title
                body: $body
              }) {
                discussion {
                  id
                  url
                }
              }
            }' \
            -f repositoryId="$REPOSITORY_ID" \
            -f categoryId="$CATEGORY_ID" \
            -f title="$TITLE" \
            -f body="$BODY"
